apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.minReplicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      release: {{ .Release.Name }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Release.Name }}
    spec:
      nodeSelector:
        {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      serviceAccountName: {{ template "fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ $.Values.deployment.image.name}}:{{ $.Values.deployment.image.version }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.global.orchestrator.graphql.external.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          env:
            - name: APP_ADDRESS
              value: "0.0.0.0:{{ .Values.global.orchestrator.graphql.external.port }}"
            - name: APP_SHUTDOWN_TIMEOUT
              value: "30s"
            - name: APP_DEFAULT_API
              value: "{{ .Values.global.orchestrator.defaultEndpoint }}"
            - name: APP_API_ENDPOINT
              value: "{{ .Values.global.orchestrator.apiEndpoint }}"
            - name: APP_JWKS_ENDPOINT
              value: "{{ .Values.global.orchestrator.authentication.jwksEndpoint }}"
            - name: APP_ALLOW_JWT_SIGNING_NONE
              value: "{{ .Values.global.orchestrator.authentication.allowJWTSigningNone }}"
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-orchestrator-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-orchestrator-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-orchestrator-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: iot-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxOpenConnections}}"
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: "{{.Values.deployment.dbPool.maxIdleConnections}}"
            - name: APP_APPLICATIONS_NAMESPACE
              value: {{ .Release.Namespace }}
          livenessProbe:
            httpGet:
              port: {{ .Values.global.orchestrator.graphql.external.port }}
              path: "/healthz"
            initialDelaySeconds: {{ .Values.global.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.global.livenessProbe.timeoutSeconds }}
            periodSeconds: {{.Values.global.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              port: {{ .Values.global.orchestrator.graphql.external.port }}
              path: "/readyz"
            initialDelaySeconds: {{ $.Values.global.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ $.Values.global.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ $.Values.global.readinessProbe.periodSeconds }}
